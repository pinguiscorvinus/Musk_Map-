{"version":3,"sources":["components/Map.js","action/muskmapaction.js","components/Datanavbar.js","pages/Home.js","App.js","serviceWorker.js","reducers/maukmap_reducers.js","index.js"],"names":["mymap","fetchMuskmapdata","dispatch","axios","get","then","response","muskmap","data","type","value","catch","error","console","log","passcurrentcity","city","currentcity","getcurrentcity","passcurrentarea","area","currentarea","getcurrentarea","Datanavbar","props","selectcity","selectarea","state","currentcitysarealist","currentcitysarea","selectedcity","this","passlocationdata","Navbar","bg","variant","expand","className","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","CityCountyData","map","index","Item","role","key","onClick","CityName","filter","setState","prevState","AreaList","Swal","fire","AreaName","React","Component","connect","store","muskmapreducer","bindActionCreators","Map","L","setView","tileLayer","addTo","muskmapdatas","features","allmuskmapdate","selectedtcity","selectedarea","passlocationareadata","citymuskmapdata","properties","county","cityareamuskmapdata","town","cityareaLatitude","geometry","coordinates","cityareaLongitude","flyTo","animate","cityLatitude","cityLongitude","markers","markerClusterGroup","blueIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","i","length","Latitude","Longitude","addLayer","marker","icon","bindPopup","name","address","phone","mask_adult","mask_child","note","muskmapdata","Home","App","path","Boolean","window","location","hostname","match","initState1","initState2","combineReducers","action","Object","assign","rootReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ea35aa48.chunk.js","sourcesContent":["import React from 'react'\r\n// 引入Redux相關\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { fetchMuskmapdata } from '../action/muskmapaction'\r\n// 引入地圖圖資\r\nimport 'leaflet/dist/leaflet.css'\r\nimport L from 'leaflet'\r\nimport 'leaflet.markercluster/dist/MarkerCluster.css'\r\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css'\r\nimport 'leaflet.markercluster'\r\n\r\nlet mymap\r\nclass Map extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchMuskmapdata()\r\n    //import map\r\n    mymap = L.map('mapid').setView([25.039969, 121.512548], 12)\r\n    const OSMUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    L.tileLayer(OSMUrl).addTo(mymap)\r\n  }\r\n  componentDidUpdate() {\r\n    const { features = [] } = this.props.muskmapdatas\r\n    const allmuskmapdate = features\r\n    // console.log(allmuskmapdate)\r\n    const selectedtcity = this.props.passlocationdata.currentcity\r\n    const selectedarea = this.props.passlocationareadata.currentarea\r\n    // 更新地圖位置\r\n    if (selectedtcity !== 'Nation') {\r\n      const citymuskmapdata = allmuskmapdate.filter(\r\n        (area) => area.properties.county === selectedtcity\r\n      )\r\n      if (selectedarea !== 'Unset') {\r\n        const cityareamuskmapdata = citymuskmapdata.filter(\r\n          (area) => area.properties.town === selectedarea\r\n        )\r\n        const cityareaLatitude = cityareamuskmapdata[0].geometry.coordinates[1]\r\n        const cityareaLongitude = cityareamuskmapdata[0].geometry.coordinates[0]\r\n        mymap.flyTo([cityareaLatitude, cityareaLongitude], 15, {\r\n          animate: false,\r\n        })\r\n        // mymap.zoomIn(2)\r\n      } else {\r\n        const cityLatitude = citymuskmapdata[0].geometry.coordinates[1]\r\n        const cityLongitude = citymuskmapdata[0].geometry.coordinates[0]\r\n        mymap.flyTo([cityLatitude, cityLongitude], 12, { animate: false })\r\n      }\r\n    }\r\n    // import markerClusterGroup\r\n    const markers = L.markerClusterGroup().addTo(mymap)\r\n    // seticon\r\n    const blueIcon = new L.Icon({\r\n      iconUrl:\r\n        'https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\r\n      shadowUrl:\r\n        'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n      iconSize: [25, 41],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      shadowSize: [41, 41],\r\n    })\r\n    // 取得座標資料\r\n    for (let i = 0; i < allmuskmapdate.length - 1; i++) {\r\n      let Latitude = allmuskmapdate[i].geometry.coordinates[1]\r\n      let Longitude = allmuskmapdate[i].geometry.coordinates[0]\r\n      markers.addLayer(\r\n        L.marker([Latitude, Longitude], { icon: blueIcon }).bindPopup(\r\n          `<div class=\"card muskdatapopup\" style=\"width: 18rem;\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">${allmuskmapdate[i].properties.name}</h5>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">${allmuskmapdate[i].properties.address}</h6>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">${allmuskmapdate[i].properties.phone}</h6>\r\n                <table class=\"table\">\r\n                    <tr>\r\n                      <td>成人口罩還有</td>\r\n                      <td>${allmuskmapdate[i].properties.mask_adult} 個</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>兒童口罩還有</td>\r\n                      <td>${allmuskmapdate[i].properties.mask_child} 個</td>\r\n                    </tr>\r\n                </table>\r\n                <p class=\"card-text\">藥局備註：${allmuskmapdate[i].properties.note}</p>\r\n              </div>\r\n            </div>`\r\n        )\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"mapid\" className=\"muskmap\"></div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n// 取得Redux中store的值\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    muskmapdatas: store.muskmapreducer.muskmapdata,\r\n    passlocationdata: store.muskmapreducer.passlocationdata,\r\n    passlocationareadata: store.muskmapreducer.passlocationareadata,\r\n  }\r\n}\r\n\r\n// 指示dispatch要綁定哪些action creators\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ fetchMuskmapdata }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map)\r\n","//引入axios\r\nimport axios from 'axios'\r\n\r\n// 取得口罩地圖資料\r\nexport const getmuskmapdata = (data) => ({\r\n  type: 'GET_MUSKMAPSDATA',\r\n  value: data,\r\n})\r\nexport const fetchMuskmapdata = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\r\n        'https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json'\r\n      )\r\n      .then(function (response) {\r\n        // Success\r\n        const muskmap = response.data\r\n        dispatch(getmuskmapdata(muskmap))\r\n      })\r\n      .catch(function (error) {\r\n        // Error\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n// 取得地點選擇\r\nexport const getcurrentcity = (city) => ({\r\n  type: 'SENT_LOCATIONDATA',\r\n  currentcity: city,\r\n})\r\nexport const passcurrentcity = (city) => {\r\n  return (dispatch) => {\r\n    dispatch(getcurrentcity(city))\r\n  }\r\n}\r\n// 取得鄉鎮市區\r\nexport const getcurrentarea = (area) => ({\r\n  type: 'SENT_LOCATIONAREADATA',\r\n  currentarea: area,\r\n})\r\nexport const passcurrentarea = (area) => {\r\n  return (dispatch) => {\r\n    dispatch(getcurrentarea(area))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport CityCountyData from '../jsondata/CityCountyData.json'\r\nimport { passcurrentcity, passcurrentarea } from '../action/muskmapaction'\r\nimport { Navbar, NavDropdown, Nav } from 'react-bootstrap'\r\n//import sweetaler\r\nimport Swal from 'sweetalert2'\r\nimport 'sweetalert2/src/sweetalert2.scss'\r\n\r\nexport class Datanavbar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      currentcitysarealist: [],\r\n    }\r\n  }\r\n  //redux sent data\r\n  selectcity = (city) => {\r\n    this.props.passcurrentcity(city)\r\n  }\r\n  selectarea = (area) => {\r\n    this.props.passcurrentarea(area)\r\n  }\r\n  render() {\r\n    let currentcitysarea = []\r\n    let selectedcity = this.props.passlocationdata.currentcity\r\n    let currentcitysareas = () => {\r\n      if (selectedcity !== 'Nation') {\r\n        currentcitysarea = CityCountyData.filter(\r\n          (area) => area.CityName === selectedcity\r\n        )\r\n        this.setState((prevState, props) => ({\r\n          currentcitysarealist: currentcitysarea[0].AreaList,\r\n        }))\r\n      } else {\r\n        Swal.fire('請先選擇縣市')\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"muskmapNavbar\">\r\n          <Navbar.Brand>試作口罩地圖</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link className=\"nav-items\">全國口罩地圖</Nav.Link>\r\n              <NavDropdown\r\n                title=\"選擇縣市\"\r\n                id=\"basic-nav-dropdown\"\r\n                className=\"nav-items\"\r\n              >\r\n                <div className=\"selectcity\">\r\n                  {CityCountyData.map((value, index) => {\r\n                    return (\r\n                      <NavDropdown.Item\r\n                        role=\"button\"\r\n                        key={index}\r\n                        className=\"dropdown-item\"\r\n                        onClick={() => {\r\n                          this.selectcity(value.CityName)\r\n                          this.selectarea('Unset')\r\n                        }}\r\n                      >\r\n                        {value.CityName}\r\n                      </NavDropdown.Item>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </NavDropdown>\r\n              <NavDropdown\r\n                title=\"選擇鄉鎮\"\r\n                id=\"basic-nav-dropdown\"\r\n                className=\"nav-items\"\r\n                onClick={() => {\r\n                  currentcitysareas()\r\n                }}\r\n              >\r\n                <div className=\"selectcity\">\r\n                  {this.state.currentcitysarealist.map((value, index) => {\r\n                    return (\r\n                      <NavDropdown.Item\r\n                        role=\"button\"\r\n                        key={index}\r\n                        className=\"dropdown-item\"\r\n                        onClick={() => {\r\n                          this.selectarea(value.AreaName)\r\n                        }}\r\n                      >\r\n                        {value.AreaName}\r\n                      </NavDropdown.Item>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// 取得Redux中store的值\r\nconst mapStateToProps = (store) => {\r\n  return { passlocationdata: store.muskmapreducer.passlocationdata }\r\n}\r\n// 指示dispatch要綁定哪些action creators\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({ passcurrentcity, passcurrentarea }, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Datanavbar)\r\n","import React, { Component } from 'react'\r\n\r\nimport Datanavbar from '../components/Datanavbar'\r\n\r\nimport Map from '../components/Map'\r\n\r\nimport '../scss/muskmapscss.scss'\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      <div>\r\n        <Datanavbar />\r\n        <div className=\"tmapcontaner\">\r\n          <Map />\r\n        </div>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './App.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n//components\r\nimport Home from './pages/Home'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\n//預設資料\r\nlet initState1 = {\r\n  currentcity: 'Nation',\r\n}\r\nlet initState2 = {\r\n  currentarea: 'Unset',\r\n}\r\n//取得口罩地圖資料\r\nconst muskmapdata = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET_MUSKMAPSDATA':\r\n      return action.value\r\n    default:\r\n      return state\r\n  }\r\n}\r\n// 取得所選縣市\r\nconst passlocationdata = (state = initState1, action) => {\r\n  switch (action.type) {\r\n    case 'SENT_LOCATIONDATA':\r\n      return Object.assign({}, state, {\r\n        currentcity: action.currentcity,\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n//取得所選鄉鎮市區\r\nconst passlocationareadata = (state = initState2, action) => {\r\n  switch (action.type) {\r\n    case 'SENT_LOCATIONAREADATA':\r\n      return Object.assign({}, state, {\r\n        currentarea: action.currentarea,\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n//合併多個reducer(歸納函式)，為了配合瀏覽器開發外掛而必須的\r\nconst muskmapreducer = combineReducers({\r\n  muskmapdata,\r\n  passlocationdata,\r\n  passlocationareadata,\r\n})\r\nexport { muskmapreducer }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n//redux\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n//導入reducers\r\nimport { muskmapreducer } from './reducers/maukmap_reducers'\r\n//引入中介軟體\r\nimport thunk from 'redux-thunk'\r\n\r\n//合併reducers\r\nconst rootReducer = combineReducers({\r\n  muskmapreducer,\r\n})\r\n//使用中介軟體時，建立store的方法，需要額外建立一個composeEnhancers\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(\r\n  rootReducer,\r\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}